//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :2.0.50727.42
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Exo9 {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("tpcsharpDataSetStagiaire")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class tpcsharpDataSetStagiaire : System.Data.DataSet {
        
        private stagiairesDataTable tablestagiaires;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tpcsharpDataSetStagiaire() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected tpcsharpDataSetStagiaire(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["stagiaires"] != null)) {
                    base.Tables.Add(new stagiairesDataTable(ds.Tables["stagiaires"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stagiairesDataTable stagiaires {
            get {
                return this.tablestagiaires;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            tpcsharpDataSetStagiaire cln = ((tpcsharpDataSetStagiaire)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["stagiaires"] != null)) {
                    base.Tables.Add(new stagiairesDataTable(ds.Tables["stagiaires"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablestagiaires = ((stagiairesDataTable)(base.Tables["stagiaires"]));
            if ((initTable == true)) {
                if ((this.tablestagiaires != null)) {
                    this.tablestagiaires.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "tpcsharpDataSetStagiaire";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tpcsharpDataSetStagiaire.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablestagiaires = new stagiairesDataTable();
            base.Tables.Add(this.tablestagiaires);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestagiaires() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            tpcsharpDataSetStagiaire ds = new tpcsharpDataSetStagiaire();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void stagiairesRowChangeEventHandler(object sender, stagiairesRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stagiairesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnnumosia;
            
            private System.Data.DataColumn columnnom;
            
            private System.Data.DataColumn columnprenom;
            
            private System.Data.DataColumn columnrue;
            
            private System.Data.DataColumn columnville;
            
            private System.Data.DataColumn columncodepostal;
            
            private System.Data.DataColumn columnnbrenotes;
            
            private System.Data.DataColumn columnpointsnotes;
            
            private System.Data.DataColumn columnnomsection;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stagiairesDataTable() {
                this.TableName = "stagiaires";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stagiairesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stagiairesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn numosiaColumn {
                get {
                    return this.columnnumosia;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nomColumn {
                get {
                    return this.columnnom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn prenomColumn {
                get {
                    return this.columnprenom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rueColumn {
                get {
                    return this.columnrue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn villeColumn {
                get {
                    return this.columnville;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn codepostalColumn {
                get {
                    return this.columncodepostal;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nbrenotesColumn {
                get {
                    return this.columnnbrenotes;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn pointsnotesColumn {
                get {
                    return this.columnpointsnotes;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nomsectionColumn {
                get {
                    return this.columnnomsection;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stagiairesRow this[int index] {
                get {
                    return ((stagiairesRow)(this.Rows[index]));
                }
            }
            
            public event stagiairesRowChangeEventHandler stagiairesRowChanging;
            
            public event stagiairesRowChangeEventHandler stagiairesRowChanged;
            
            public event stagiairesRowChangeEventHandler stagiairesRowDeleting;
            
            public event stagiairesRowChangeEventHandler stagiairesRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstagiairesRow(stagiairesRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stagiairesRow AddstagiairesRow(int numosia, string nom, string prenom, string rue, string ville, string codepostal, int nbrenotes, int pointsnotes, string nomsection) {
                stagiairesRow rowstagiairesRow = ((stagiairesRow)(this.NewRow()));
                rowstagiairesRow.ItemArray = new object[] {
                        numosia,
                        nom,
                        prenom,
                        rue,
                        ville,
                        codepostal,
                        nbrenotes,
                        pointsnotes,
                        nomsection};
                this.Rows.Add(rowstagiairesRow);
                return rowstagiairesRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stagiairesRow FindBynumosia(int numosia) {
                return ((stagiairesRow)(this.Rows.Find(new object[] {
                            numosia})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                stagiairesDataTable cln = ((stagiairesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new stagiairesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnumosia = base.Columns["numosia"];
                this.columnnom = base.Columns["nom"];
                this.columnprenom = base.Columns["prenom"];
                this.columnrue = base.Columns["rue"];
                this.columnville = base.Columns["ville"];
                this.columncodepostal = base.Columns["codepostal"];
                this.columnnbrenotes = base.Columns["nbrenotes"];
                this.columnpointsnotes = base.Columns["pointsnotes"];
                this.columnnomsection = base.Columns["nomsection"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnumosia = new System.Data.DataColumn("numosia", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumosia);
                this.columnnom = new System.Data.DataColumn("nom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnom);
                this.columnprenom = new System.Data.DataColumn("prenom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprenom);
                this.columnrue = new System.Data.DataColumn("rue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrue);
                this.columnville = new System.Data.DataColumn("ville", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnville);
                this.columncodepostal = new System.Data.DataColumn("codepostal", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncodepostal);
                this.columnnbrenotes = new System.Data.DataColumn("nbrenotes", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnbrenotes);
                this.columnpointsnotes = new System.Data.DataColumn("pointsnotes", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpointsnotes);
                this.columnnomsection = new System.Data.DataColumn("nomsection", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnomsection);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnnumosia}, true));
                this.columnnumosia.AllowDBNull = false;
                this.columnnumosia.Unique = true;
                this.columnnom.AllowDBNull = false;
                this.columnnom.MaxLength = 50;
                this.columnprenom.MaxLength = 50;
                this.columnrue.MaxLength = 32;
                this.columnville.MaxLength = 25;
                this.columncodepostal.MaxLength = 5;
                this.columnnomsection.AllowDBNull = false;
                this.columnnomsection.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stagiairesRow NewstagiairesRow() {
                return ((stagiairesRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new stagiairesRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(stagiairesRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stagiairesRowChanged != null)) {
                    this.stagiairesRowChanged(this, new stagiairesRowChangeEvent(((stagiairesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stagiairesRowChanging != null)) {
                    this.stagiairesRowChanging(this, new stagiairesRowChangeEvent(((stagiairesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stagiairesRowDeleted != null)) {
                    this.stagiairesRowDeleted(this, new stagiairesRowChangeEvent(((stagiairesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stagiairesRowDeleting != null)) {
                    this.stagiairesRowDeleting(this, new stagiairesRowChangeEvent(((stagiairesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestagiairesRow(stagiairesRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                tpcsharpDataSetStagiaire ds = new tpcsharpDataSetStagiaire();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stagiairesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stagiairesRow : System.Data.DataRow {
            
            private stagiairesDataTable tablestagiaires;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stagiairesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestagiaires = ((stagiairesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numosia {
                get {
                    return ((int)(this[this.tablestagiaires.numosiaColumn]));
                }
                set {
                    this[this.tablestagiaires.numosiaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nom {
                get {
                    return ((string)(this[this.tablestagiaires.nomColumn]));
                }
                set {
                    this[this.tablestagiaires.nomColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prenom {
                get {
                    try {
                        return ((string)(this[this.tablestagiaires.prenomColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("La valeur pour la colonne \'prenom\' dans la table \'stagiaires\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablestagiaires.prenomColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rue {
                get {
                    try {
                        return ((string)(this[this.tablestagiaires.rueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("La valeur pour la colonne \'rue\' dans la table \'stagiaires\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablestagiaires.rueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ville {
                get {
                    try {
                        return ((string)(this[this.tablestagiaires.villeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("La valeur pour la colonne \'ville\' dans la table \'stagiaires\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablestagiaires.villeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codepostal {
                get {
                    try {
                        return ((string)(this[this.tablestagiaires.codepostalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("La valeur pour la colonne \'codepostal\' dans la table \'stagiaires\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablestagiaires.codepostalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nbrenotes {
                get {
                    try {
                        return ((int)(this[this.tablestagiaires.nbrenotesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("La valeur pour la colonne \'nbrenotes\' dans la table \'stagiaires\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablestagiaires.nbrenotesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pointsnotes {
                get {
                    try {
                        return ((int)(this[this.tablestagiaires.pointsnotesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("La valeur pour la colonne \'pointsnotes\' dans la table \'stagiaires\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablestagiaires.pointsnotesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nomsection {
                get {
                    return ((string)(this[this.tablestagiaires.nomsectionColumn]));
                }
                set {
                    this[this.tablestagiaires.nomsectionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprenomNull() {
                return this.IsNull(this.tablestagiaires.prenomColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprenomNull() {
                this[this.tablestagiaires.prenomColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrueNull() {
                return this.IsNull(this.tablestagiaires.rueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrueNull() {
                this[this.tablestagiaires.rueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvilleNull() {
                return this.IsNull(this.tablestagiaires.villeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvilleNull() {
                this[this.tablestagiaires.villeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodepostalNull() {
                return this.IsNull(this.tablestagiaires.codepostalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodepostalNull() {
                this[this.tablestagiaires.codepostalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnbrenotesNull() {
                return this.IsNull(this.tablestagiaires.nbrenotesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnbrenotesNull() {
                this[this.tablestagiaires.nbrenotesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspointsnotesNull() {
                return this.IsNull(this.tablestagiaires.pointsnotesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpointsnotesNull() {
                this[this.tablestagiaires.pointsnotesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stagiairesRowChangeEvent : System.EventArgs {
            
            private stagiairesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stagiairesRowChangeEvent(stagiairesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stagiairesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Exo9.tpcsharpDataSetStagiaireTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class stagiairesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public stagiairesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "stagiaires";
            tableMapping.ColumnMappings.Add("numosia", "numosia");
            tableMapping.ColumnMappings.Add("nom", "nom");
            tableMapping.ColumnMappings.Add("prenom", "prenom");
            tableMapping.ColumnMappings.Add("rue", "rue");
            tableMapping.ColumnMappings.Add("ville", "ville");
            tableMapping.ColumnMappings.Add("codepostal", "codepostal");
            tableMapping.ColumnMappings.Add("nbrenotes", "nbrenotes");
            tableMapping.ColumnMappings.Add("pointsnotes", "pointsnotes");
            tableMapping.ColumnMappings.Add("nomsection", "nomsection");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[stagiaires] WHERE (([numosia] = @Original_numosia) AND ([nom] = @Original_nom) AND ((@IsNull_prenom = 1 AND [prenom] IS NULL) OR ([prenom] = @Original_prenom)) AND ((@IsNull_rue = 1 AND [rue] IS NULL) OR ([rue] = @Original_rue)) AND ((@IsNull_ville = 1 AND [ville] IS NULL) OR ([ville] = @Original_ville)) AND ((@IsNull_codepostal = 1 AND [codepostal] IS NULL) OR ([codepostal] = @Original_codepostal)) AND ((@IsNull_nbrenotes = 1 AND [nbrenotes] IS NULL) OR ([nbrenotes] = @Original_nbrenotes)) AND ((@IsNull_pointsnotes = 1 AND [pointsnotes] IS NULL) OR ([pointsnotes] = @Original_pointsnotes)) AND ([nomsection] = @Original_nomsection))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_numosia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "numosia", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nom", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_prenom", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "prenom", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_prenom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prenom", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_rue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "rue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "rue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ville", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ville", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ville", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ville", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_codepostal", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "codepostal", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_codepostal", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "codepostal", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nbrenotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nbrenotes", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nbrenotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nbrenotes", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_pointsnotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pointsnotes", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_pointsnotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pointsnotes", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nomsection", System.Data.SqlDbType.NChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nomsection", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[stagiaires] ([numosia], [nom], [prenom], [rue], [ville], [codepostal], [nbrenotes], [pointsnotes], [nomsection]) VALUES (@numosia, @nom, @prenom, @rue, @ville, @codepostal, @nbrenotes, @pointsnotes, @nomsection);
SELECT numosia, nom, prenom, rue, ville, codepostal, nbrenotes, pointsnotes, nomsection FROM stagiaires WHERE (numosia = @numosia)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@numosia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "numosia", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nom", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@prenom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prenom", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "rue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ville", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ville", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@codepostal", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "codepostal", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nbrenotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nbrenotes", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@pointsnotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pointsnotes", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nomsection", System.Data.SqlDbType.NChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nomsection", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[stagiaires] SET [numosia] = @numosia, [nom] = @nom, [prenom] = @prenom, [rue] = @rue, [ville] = @ville, [codepostal] = @codepostal, [nbrenotes] = @nbrenotes, [pointsnotes] = @pointsnotes, [nomsection] = @nomsection WHERE (([numosia] = @Original_numosia) AND ([nom] = @Original_nom) AND ((@IsNull_prenom = 1 AND [prenom] IS NULL) OR ([prenom] = @Original_prenom)) AND ((@IsNull_rue = 1 AND [rue] IS NULL) OR ([rue] = @Original_rue)) AND ((@IsNull_ville = 1 AND [ville] IS NULL) OR ([ville] = @Original_ville)) AND ((@IsNull_codepostal = 1 AND [codepostal] IS NULL) OR ([codepostal] = @Original_codepostal)) AND ((@IsNull_nbrenotes = 1 AND [nbrenotes] IS NULL) OR ([nbrenotes] = @Original_nbrenotes)) AND ((@IsNull_pointsnotes = 1 AND [pointsnotes] IS NULL) OR ([pointsnotes] = @Original_pointsnotes)) AND ([nomsection] = @Original_nomsection));
SELECT numosia, nom, prenom, rue, ville, codepostal, nbrenotes, pointsnotes, nomsection FROM stagiaires WHERE (numosia = @numosia)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@numosia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "numosia", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nom", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@prenom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prenom", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "rue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ville", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ville", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@codepostal", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "codepostal", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nbrenotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nbrenotes", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@pointsnotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pointsnotes", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nomsection", System.Data.SqlDbType.NChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nomsection", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_numosia", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "numosia", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nom", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_prenom", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "prenom", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_prenom", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prenom", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_rue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "rue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "rue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ville", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ville", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ville", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ville", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_codepostal", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "codepostal", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_codepostal", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "codepostal", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nbrenotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nbrenotes", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nbrenotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nbrenotes", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_pointsnotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pointsnotes", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_pointsnotes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pointsnotes", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nomsection", System.Data.SqlDbType.NChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nomsection", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Exo9.Properties.Settings.Default.tpcsharpConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT numosia, nom, prenom, rue, ville, codepostal, nbrenotes, pointsnotes, noms" +
                "ection FROM dbo.stagiaires";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(tpcsharpDataSetStagiaire.stagiairesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual tpcsharpDataSetStagiaire.stagiairesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            tpcsharpDataSetStagiaire.stagiairesDataTable dataTable = new tpcsharpDataSetStagiaire.stagiairesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(tpcsharpDataSetStagiaire.stagiairesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(tpcsharpDataSetStagiaire dataSet) {
            return this.Adapter.Update(dataSet, "stagiaires");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_numosia, string Original_nom, string Original_prenom, string Original_rue, string Original_ville, string Original_codepostal, System.Nullable<int> Original_nbrenotes, System.Nullable<int> Original_pointsnotes, string Original_nomsection) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_numosia));
            if ((Original_nom == null)) {
                throw new System.ArgumentNullException("Original_nom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nom));
            }
            if ((Original_prenom == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_prenom));
            }
            if ((Original_rue == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_rue));
            }
            if ((Original_ville == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ville));
            }
            if ((Original_codepostal == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_codepostal));
            }
            if ((Original_nbrenotes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_nbrenotes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_pointsnotes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_pointsnotes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_nomsection == null)) {
                throw new System.ArgumentNullException("Original_nomsection");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_nomsection));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int numosia, string nom, string prenom, string rue, string ville, string codepostal, System.Nullable<int> nbrenotes, System.Nullable<int> pointsnotes, string nomsection) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(numosia));
            if ((nom == null)) {
                throw new System.ArgumentNullException("nom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(prenom));
            }
            if ((rue == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(rue));
            }
            if ((ville == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ville));
            }
            if ((codepostal == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(codepostal));
            }
            if ((nbrenotes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(nbrenotes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((pointsnotes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(pointsnotes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((nomsection == null)) {
                throw new System.ArgumentNullException("nomsection");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(nomsection));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int numosia, 
                    string nom, 
                    string prenom, 
                    string rue, 
                    string ville, 
                    string codepostal, 
                    System.Nullable<int> nbrenotes, 
                    System.Nullable<int> pointsnotes, 
                    string nomsection, 
                    int Original_numosia, 
                    string Original_nom, 
                    string Original_prenom, 
                    string Original_rue, 
                    string Original_ville, 
                    string Original_codepostal, 
                    System.Nullable<int> Original_nbrenotes, 
                    System.Nullable<int> Original_pointsnotes, 
                    string Original_nomsection) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(numosia));
            if ((nom == null)) {
                throw new System.ArgumentNullException("nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(prenom));
            }
            if ((rue == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(rue));
            }
            if ((ville == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ville));
            }
            if ((codepostal == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(codepostal));
            }
            if ((nbrenotes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(nbrenotes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((pointsnotes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(pointsnotes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((nomsection == null)) {
                throw new System.ArgumentNullException("nomsection");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(nomsection));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_numosia));
            if ((Original_nom == null)) {
                throw new System.ArgumentNullException("Original_nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_nom));
            }
            if ((Original_prenom == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_prenom));
            }
            if ((Original_rue == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_rue));
            }
            if ((Original_ville == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ville));
            }
            if ((Original_codepostal == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_codepostal));
            }
            if ((Original_nbrenotes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_nbrenotes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_pointsnotes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_pointsnotes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_nomsection == null)) {
                throw new System.ArgumentNullException("Original_nomsection");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_nomsection));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591